[project]
name = "rico"
dynamic = ["version"]
description = "Rich content to HTML as easy as Doc(df, plot)."
authors = [
    {name = "Evgeny Ivanov", email = "ivanov.evgeny.n@gmail.com"},
]
dependencies = []
requires-python = ">=3.10"
readme = "README.md"
license = {text = "MIT"}
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Visualization",
    "Topic :: Text Processing",
    "Topic :: Text Processing :: Markup",
    "Topic :: Text Processing :: Markup :: HTML",
    "Topic :: Text Processing :: Markup :: Markdown",
]

[project.urls]
source = "https://github.com/e10v/rico"
"release notes" = "https://github.com/e10v/rico/releases"

[project.optional-dependencies]
altair = ["altair>=4.2", "vl-convert-python>=0.8"]
markdown = ["markdown>=3.3"]
pyplot = ["matplotlib>=3.5"]
seaborn = ["seaborn>=0.12"]
complete = ["rico[altair,markdown,pyplot,seaborn]"]


[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"


[tool.pdm]
[tool.pdm.dev-dependencies]
lint = ["ruff", "pyright"]
test = ["pytest", "coverage[toml]"]

[tool.pdm.scripts]
test = "coverage run -m pytest"
lint = "ruff check ."
type = "pyright"

[tool.pdm.build]
package-dir = "src"

[tool.pdm.version]
source = "scm"
write_to = "rico/_version.txt"


[tool.pytest.ini_options]
testpaths = ["tests"]

[tool.coverage]
[tool.coverage.run]
source = ["src/rico"]
[tool.coverage.report]
exclude_lines = ["if TYPE_CHECKING:", "pragma: no cover"]


[tool.pyright]
typeCheckingMode = "strict"
reportIncompatibleMethodOverride = false
reportMissingTypeStubs = false


[tool.ruff]
select = [
    "A", "ANN", "ARG", "B", "C4", "C90", "COM", "D", "DTZ", "E", "ERA", "F",
    "I", "ICN", "INP", "N", "PGH", "PL", "PT", "RET", "RSE", "RUF", "Q", "SIM",
    "SLF", "TCH", "TID", "TRY", "UP", "W",
]
ignore = [
    "ANN101", "ANN102", "ANN204", "ANN401", "B006", "N817", "PGH003", "PT001",
    "PT011", "SLF001", "TRY003",
]

[tool.ruff.per-file-ignores]
"tests/*" = ["ANN201", "D100", "D103", "PLR2004"]

[tool.ruff.isort]
classes = ["HTML"]
force-sort-within-sections = true
lines-after-imports = 2
known-local-folder = ["rico"]

[tool.ruff.pydocstyle]
convention = "google"
ignore-decorators = ["typing.overload"]

[tool.ruff.pylint]
max-args = 8
